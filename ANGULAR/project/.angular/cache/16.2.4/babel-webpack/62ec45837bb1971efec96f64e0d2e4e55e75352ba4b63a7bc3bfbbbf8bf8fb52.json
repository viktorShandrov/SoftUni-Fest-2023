{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TokenInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function TokenInterceptor_Factory(t) {\n    return new (t || TokenInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptor,\n    factory: TokenInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["TokenInterceptor","constructor","intercept","request","next","token","localStorage","getItem","clone","setHeaders","Authorization","handle","_","_2","factory","ɵfac"],"sources":["D:\\Softuni and Coding journey\\Softuni Cources\\NextJs\\SoftUni-Fest-2023-chatapp\\ANGULAR\\project\\src\\app\\core\\interseptors\\token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const token = localStorage.getItem(\"token\")\r\n    if(token){\r\n      request = request.clone({\r\n        setHeaders:{\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n"],"mappings":";AAUA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAA,GAAe;EAEfC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAGF,KAAK,EAAC;MACPF,OAAO,GAAGA,OAAO,CAACK,KAAK,CAAC;QACtBC,UAAU,EAAC;UACTC,aAAa,EAAE,UAAUL,KAAK;;OAEjC,CAAC;;IAKJ,OAAOD,IAAI,CAACO,MAAM,CAACR,OAAO,CAAC;EAC7B;EAAC,QAAAS,CAAA,G;qBAjBUZ,gBAAgB;EAAA;EAAA,QAAAa,EAAA,G;WAAhBb,gBAAgB;IAAAc,OAAA,EAAhBd,gBAAgB,CAAAe;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}